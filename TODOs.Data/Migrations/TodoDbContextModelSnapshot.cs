// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TODOs.Data;

namespace TODOs.Data.Migrations
{
    [DbContext(typeof(TodoDbContext))]
    partial class TodoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TODOs.Data.Entities.Todo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ListId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ListId");

                    b.ToTable("Todos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Brush teeth",
                            ListId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 2,
                            Label = "Breakfast",
                            ListId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 3,
                            Label = "Dress up",
                            ListId = 1,
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            Label = "Spend time with family",
                            ListId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 5,
                            Label = "Have a dinner",
                            ListId = 2,
                            Status = false
                        },
                        new
                        {
                            Id = 6,
                            Label = "Watch TV",
                            ListId = 2,
                            Status = false
                        });
                });

            modelBuilder.Entity("TODOs.Data.Entities.TodoList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Lists");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Label = "Morning"
                        },
                        new
                        {
                            Id = 2,
                            Label = "Evening"
                        });
                });

            modelBuilder.Entity("TODOs.Data.Entities.Todo", b =>
                {
                    b.HasOne("TODOs.Data.Entities.TodoList", "List")
                        .WithMany("Todos")
                        .HasForeignKey("ListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("List");
                });

            modelBuilder.Entity("TODOs.Data.Entities.TodoList", b =>
                {
                    b.Navigation("Todos");
                });
#pragma warning restore 612, 618
        }
    }
}
